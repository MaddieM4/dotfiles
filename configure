#!/bin/bash
set -e

if [ "$USE_1PASSWORD" = 0 ]; then
  unset USE_1PASSWORD
elif (which op > /dev/null); then
  eval $(op signin)
  USE_1PASSWORD=1
fi

suggest() {
  local url="$1"
  if [ -n "$USE_1PASSWORD" ]; then
    op read "$url"
  fi
  # Otherwise emit nothing
}

prompt_for() {
  local varname="$1"
  local url="$2"
  local dest="secrets/.config/mm4cc/secrets/$varname"
  if [ ! -e "$dest" ]; then
    read -p "Provide a value for $varname: " -ei "$(suggest "$url")" value
    echo "$value" > "$dest"
  fi
}

prompt_for GIT_NAME op://Personal/git/name
prompt_for GIT_EMAIL op://Personal/git/email
prompt_for NTFY_TOKEN op://Personal/ntfy/token

( # Configure git
  source /etc/profile.d/mm4cc-secrets.sh;
  git config --global user.name "$GIT_NAME"
  git config --global user.email "$GIT_EMAIL"
  git config --global init.defaultBranch main
)

( # Configure ssh
  source /etc/profile.d/mm4cc-secrets.sh;
  ALGORITHM=ed25519
  mkdir -p files/.ssh && cd files/.ssh
  if [ ! -e id_$ALGORITHM ]; then
    ssh-keygen -t $ALGORITHM -C "$GIT_EMAIL" -f ./id_$ALGORITHM
    echo "If you need to save your key in GitHub:"
    echo "  https://github.com/settings/keys"
    cat id_$ALGORITHM.pub
  fi
)

echo "You may wish to 'source /etc/profile.d/mm4cc-secrets.sh' now."
